# inherit_from: .rubocop_todo.yml

# Exclude some files for all rubocop checks
AllCops:
  Exclude:
    - 'Vagrantfile'
    - 'db/**/*'
    - 'spec/rails_helper.rb'
    - 'spec/spec_helper.rb'
    - 'config/**/*'
    - 'bin/**/*'
    - 'features/**/*'
    - 'spec/**/*'
  DisplayCopNames: true

# Prevent rubocop error caused by the method 'get_raw_records' in datatable classes
Style/AccessorMethodName:
  Exclude:
    - 'app/datatables/*'

# Disable some style configurations
Style/AndOr:
  Enabled: false

Style/StringLiterals:
  Enabled: false

Style/NumericLiterals:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

Style/Alias:
  Enabled: false

Style/SymbolProc:
  Enabled: false

# This cop is designed to help upgrade to Ruby3.0. Disabled for now.
Style/FrozenStringLiteralComment:
  Enabled: false

# This cop checks for the formatting of empty method definitions. By default it enforces empty method definitions to go on a single line (compact style), but it can be configured to enforce the `end` to go on its own line (expanded style.)
Style/EmptyMethod:
  EnforcedStyle: expanded

# This cop checks for uses of rescue in its modifier form. Disabled for now.
Style/RescueModifier:
  Enabled: false

# All metrics are disabled for now, rubocop will mainly be for style
Metrics/AbcSize:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/LineLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false
